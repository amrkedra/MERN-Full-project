pipeline {
    agent any

    stages {
        stage("Clone the Repo & Go to Terraform Folder") {
            steps {
                script {
                    // Remove the existing directory if it exists
                    sh 'rm -rf MERN-Infra-providing'
                    
                    // Clone the repository from the remote
                    git branch: 'main', url: 'https://github.com/amrkedra/MERN-Full-project.git'
                    
                    // Change directory to Terraform
                    dir('Terraform') {
                        // Now you can run Terraform commands here
                }
            }
        }
        }
        

        stage('Terraform Init') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', 
                                  credentialsId: 'AWS-Creds']]) {
                    script {
                        dir('Terraform') {
                            sh 'terraform init -reconfigure'
                        }
                    }
                }
            }
        }

        stage('Terraform Plan') {
    steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', 
                          credentialsId: 'AWS-Creds']]) {
            script {
                dir('Terraform') {
                    sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        terraform init -reconfigure
                        terraform plan
                    '''
                }
            }
        }
    }
}

        stage('Terraform Apply') {
    steps {
        input 'Approve Terraform Apply?'
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', 
                          credentialsId: 'aws-creds']]) {
            script {
                dir('MERN-Infra-providing/Terraform') {
                    sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        terraform apply -auto-approve
                    '''
                }
            }
        }
    }
}

    post {
        always {
            script {
                // Archive Terraform state files
                archiveArtifacts artifacts: '**/terraform.tfstate', fingerprint: true
            }
        }
    }
}
}
